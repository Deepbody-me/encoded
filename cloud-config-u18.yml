#cloud-config
power_state:
  mode: reboot
output:
  all: '| tee -a /var/log/cloud-init-output.log'
users:
  - default
  ssh_authorized_keys:
    - %(LOCAL_SSH_KEY)s
  - encoded
  ssh_authorized_keys:
    - %(LOCAL_SSH_KEY)s
  - postgres
  ssh_authorized_keys:
    - %(LOCAL_SSH_KEY)s
runcmd:
# General
  - sudo apt update
  - sudo apt install git
# Python: https://linuxize.com/post/how-to-install-python-3-7-on-ubuntu-18-04/
  - sudo apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
  - wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz
  - tar -xf Python-3.7.3.tar.xz
  - cd Python-3.7.3
  - ./configure --enable-optimizations
  - make -j 16
  - sudo make altinstall
  - cd ~/
# Node via NVM: https://github.com/creationix/nvm
  - curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh -o install_nvm.sh
  - bash install_nvm.sh
  - source .bashrc
  - nvm install v10.15.3
# Java: from previous search, taken from java branch in encd repo
  - sudo mkdir -p /usr/lib/jvm
  - sudo chmod 777 /usr/lib/jvm
  - [ wget, --no-cookies, --no-check-certificate, --header, "Cookie: oraclelicense=accept-securebackup-cookie", "https://download.oracle.com/otn-pub/java/jdk/12+33/312335d836a34c7c8bba9d963e26dc23/jdk-12_linux-x64_bin.tar.gz", -O , /usr/lib/jvm/jdk-12_linux-x64_bin.tar.gz ]
  - sudo tar -xzvf /usr/lib/jvm/jdk-12_linux-x64_bin.tar.gz --directory /usr/lib/jvm/
  - sudo chmod 755 /usr/lib/jvm
  - sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-12/bin/java 100
# PostgreSQL: https://wiki.postgresql.org/wiki/Apt
  - curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  - sudo touch /etc/apt/sources.list.d/pgdg.list
  - sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
  - sudo apt update
  - sudo apt install -y postgresql-11 pgadmin4
  - sudo su postgres
  - echo "include 'custom.conf'" >> /etc/postgresql/11/main/postgresql.conf
  - echo "standby_mode = off" >> /etc/postgresql/11/main/recovery.conf
  - echo "include 'demo.conf'" >> /etc/postgresql/11/main/postgresql.conf
  - createuser encoded
  - createdb --owner=encoded encoded
  - exit
  - sudo /etc/init.d/postgresql stop
  ## Wal-E
  - sudo mkdir /opt/wal-e
  - sudo chown postgres:postgres /opt/wal-e
  - sudo su - postgres
  - python3.7 -m venv /opt/wal-e
  - source /opt/wal-e/bin/activate
  - pip install wal-e
  - wal-e --aws-instance-profile --s3-prefix="$(cat /etc/postgresql/11/main/wale_s3_prefix)" backup-fetch /var/lib/postgresql/11/main LATEST
  - ln -s /etc/postgresql/11/main/recovery.conf /var/lib/postgresql/11/main/
  - exit
  - sudo /etc/init.d/postgresql start
# Redis
  - sudo apt install -y redis-server
  - sudo cp /etc/redis/redis.conf /etc/redis/redis.conf.default
  - sudo sed -i -e 's/port 6379/port %(REDIS_PORT)s/' /etc/redis/redis.conf
  - sudo sed -i -e 's/bind 127\.0\.0\.1/bind 0\.0\.0\.0/' /etc/redis/redis.conf
  - sudo service redis-server restart
# Elasticsearch
  - sudo apt install elasticsearch
  - update-rc.d elasticsearch defaults
  - service elasticsearch restart
# Encode App
  - sudo su - encoded
  - git clone %(GIT_REPO)s
# Cloud Watch

# Files
## Postgres
- path: /etc/postgresql/11/main/custom.conf
  content: |
    hot_standby = on
    max_standby_archive_delay = -1
    wal_level = hot_standby
    archive_mode = on
    archive_timeout = 60
    checkpoint_timeout = 1h
- path: /etc/postgresql/9.3/main/demo.conf
  content: |
    archive_mode = off
- path: /etc/postgresql/11/main/wale_s3_prefix
  content: "%(WALE_S3_PREFIX)s"
## Elasticsearch
- path: /etc/elasticsearch/elasticsearch.yml
  content: |
    http.port: 9201
    thread_pool:
        search:
            size: 100
            queue_size: 2000
        index:
            queue_size: 400
    indices.query.bool.max_clause_count: 8192
- path: /etc/elasticsearch/jvm.options
  content: |
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly
    -XX:+DisableExplicitGC
    -XX:+AlwaysPreTouch
    -server
    -Xss1m
    -Djava.awt.headless=true
    -Dfile.encoding=UTF-8
    -Djna.nosys=true
    -Djdk.io.permissionsUseCanonicalPath=true
    -Dio.netty.noUnsafe=true
    -Dio.netty.noKeySetOptimization=true
    -Dio.netty.recycler.maxCapacityPerThread=0
    -Dlog4j.shutdownHookEnabled=false
    -Dlog4j2.disable.jmx=true
    -Dlog4j.skipJansi=true
    -XX:+HeapDumpOnOutOfMemoryError
    -Xms8g
